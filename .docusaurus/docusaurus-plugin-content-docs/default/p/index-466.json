{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/introduction","docId":"introduction","unlisted":false},{"type":"link","label":"Quick Start","href":"/quickstart","docId":"quickstart","unlisted":false},{"type":"link","label":"System Architecture","href":"/architecture","docId":"architecture","unlisted":false},{"type":"category","label":"Integrations","items":[{"type":"link","label":"MCP Integration","href":"/integrations/mcp","docId":"integrations/mcp","unlisted":false},{"type":"link","label":"LangGraph Integration","href":"/integrations/langgraph","docId":"integrations/langgraph","unlisted":false},{"type":"link","label":"n8n Integration","href":"/integrations/n8n","docId":"integrations/n8n","unlisted":false},{"type":"link","label":"Custom Framework Integration","href":"/integrations/custom_frameworks","docId":"integrations/custom_frameworks","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Examples","items":[{"type":"link","label":"Claude MCP Demo","href":"/examples/claude_demo","docId":"examples/claude_demo","unlisted":false},{"type":"link","label":"LangGraph Payment Retry Example","href":"/examples/langgraph_retry","docId":"examples/langgraph_retry","unlisted":false},{"type":"link","label":"Agent-to-Agent Payment Examples","href":"/examples/agent_to_agent","docId":"examples/agent_to_agent","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Tools","items":[{"type":"link","label":"Pay Agent Utility","href":"/tools/pay_agent","docId":"tools/pay_agent","unlisted":false},{"type":"link","label":"üõ†Ô∏è Tool: pay_api_endpoint","href":"/tools/pay_api_endpoint","docId":"tools/pay_api_endpoint","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Reference","items":[{"type":"link","label":"x402 Headers Reference","href":"/reference/x402_headers","docId":"reference/x402_headers","unlisted":false},{"type":"link","label":"Security Guide","href":"/security","docId":"security","unlisted":false},{"type":"link","label":"Testnet Development","href":"/testnets","docId":"testnets","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"architecture":{"id":"architecture","title":"System Architecture","description":"PayStabl's architecture enables autonomous AI agents to handle payments through programmable smart wallets with policy governance and seamless M2M commerce capabilities.","sidebar":"tutorialSidebar"},"examples/agent_to_agent":{"id":"examples/agent_to_agent","title":"Agent-to-Agent Payment Examples","description":"This guide demonstrates how AI agents can autonomously pay each other for services, creating collaborative workflows and marketplace dynamics. Examples show real-world scenarios where agents exchange value.","sidebar":"tutorialSidebar"},"examples/claude_demo":{"id":"examples/claude_demo","title":"Claude MCP Demo","description":"This demo showcases how Claude can use PayStabl to automatically handle payments for premium APIs through the Model Context Protocol (MCP) server integration.","sidebar":"tutorialSidebar"},"examples/langgraph_retry":{"id":"examples/langgraph_retry","title":"LangGraph Payment Retry Example","description":"This example demonstrates how to implement robust payment retry logic in LangGraph workflows using PayStabl. It shows how to handle payment failures gracefully and implement different retry strategies.","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"PayStabl Developer Documentation","description":"Welcome to PayStabl - the programmable wallet infrastructure for AI agents. Build autonomous payment flows that enable agents to pay for APIs, services, and each other seamlessly."},"integrations/custom_frameworks":{"id":"integrations/custom_frameworks","title":"Custom Framework Integration","description":"Build payment capabilities into any agentic framework using the AgentPay payment kernel.","sidebar":"tutorialSidebar"},"integrations/langgraph":{"id":"integrations/langgraph","title":"LangGraph Integration","description":"Build LangGraph workflows with payment capabilities using the AgentPay payment kernel.","sidebar":"tutorialSidebar"},"integrations/mcp":{"id":"integrations/mcp","title":"MCP Integration","description":"Build MCP servers with payment capabilities using the AgentPay payment kernel.","sidebar":"tutorialSidebar"},"integrations/n8n":{"id":"integrations/n8n","title":"n8n Integration","description":"Integrate PayStabl with n8n workflows to add autonomous payment capabilities to your automation workflows. Enable bots to pay for premium APIs, compensate agents, and handle transaction flows seamlessly.","sidebar":"tutorialSidebar"},"introduction":{"id":"introduction","title":"Introduction","description":"Learn about PayStabl's programmable wallet infrastructure for AI agents","sidebar":"tutorialSidebar"},"quickstart":{"id":"quickstart","title":"Quick Start","description":"Get started with PayStabl in minutes","sidebar":"tutorialSidebar"},"reference/x402_headers":{"id":"reference/x402_headers","title":"x402 Headers Reference","description":"The x402 protocol defines a standard HTTP status code and header structure for payment-required API endpoints. This reference covers the complete specification, validation rules, and implementation details for x402-enabled services.","sidebar":"tutorialSidebar"},"security":{"id":"security","title":"Security Guide","description":"PayStabl implements enterprise-grade security to protect AI agents and their autonomous payment capabilities. This guide covers identity management, wallet security, policy enforcement, and compliance features.","sidebar":"tutorialSidebar"},"testnets":{"id":"testnets","title":"Testnet Development","description":"Develop and test your PayStabl agent integrations on testnets before deploying to production. This guide covers testnet setup, faucets, debugging tools, and best practices for agent development.","sidebar":"tutorialSidebar"},"tools/pay_agent":{"id":"tools/pay_agent","title":"Pay Agent Utility","description":"A helper utility for implementing agent-to-agent payment operations using the AgentPay payment kernel.","sidebar":"tutorialSidebar"},"tools/pay_api_endpoint":{"id":"tools/pay_api_endpoint","title":"üõ†Ô∏è Tool: pay_api_endpoint","description":"Use this tool to call external APIs that support the x402 protocol via a 402 Payment Required response. PayStabl handles the full payment flow, including generating the signed X-Payment header and retrying the request.","sidebar":"tutorialSidebar"}}}}
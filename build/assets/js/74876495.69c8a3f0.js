"use strict";(self.webpackChunkpaystabl_docs=self.webpackChunkpaystabl_docs||[]).push([[505],{689:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"quickstart","title":"Quick Start","description":"Get started with PayStabl in minutes","source":"@site/docs/quickstart.mdx","sourceDirName":".","slug":"/quickstart","permalink":"/quickstart","draft":false,"unlisted":false,"editUrl":"https://github.com/paystabl/docs/tree/main/docs/quickstart.mdx","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Quick Start","description":"Get started with PayStabl in minutes"},"sidebar":"tutorialSidebar","previous":{"title":"Introduction","permalink":"/introduction"},"next":{"title":"System Architecture","permalink":"/architecture"}}');var r=t(4848),s=t(8453);const i={sidebar_position:2,title:"Quick Start",description:"Get started with PayStabl in minutes"},l="Quickstart Guide",o={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Install PayStabl SDK",id:"step-1-install-paystabl-sdk",level:2},{value:"JavaScript/TypeScript",id:"javascripttypescript",level:3},{value:"Python",id:"python",level:3},{value:"Step 2: Create Your Agent Wallet",id:"step-2-create-your-agent-wallet",level:2},{value:"Step 3: Fund Your Agent Wallet",id:"step-3-fund-your-agent-wallet",level:2},{value:"Step 4: Configure Agent Policies",id:"step-4-configure-agent-policies",level:2},{value:"Step 5: Make Your First Payment",id:"step-5-make-your-first-payment",level:2},{value:"Step 6: Test Agent-to-Agent Payments",id:"step-6-test-agent-to-agent-payments",level:2},{value:"Common Integration Patterns",id:"common-integration-patterns",level:2},{value:"Claude MCP Server Integration",id:"claude-mcp-server-integration",level:3},{value:"LangGraph Integration",id:"langgraph-integration",level:3},{value:"Monitoring and Debugging",id:"monitoring-and-debugging",level:2},{value:"View Transaction History",id:"view-transaction-history",level:3},{value:"Check Agent Balance",id:"check-agent-balance",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Next Steps",id:"next-steps",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Getting Help",id:"getting-help",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"quickstart-guide",children:"Quickstart Guide"})}),"\n",(0,r.jsx)(n.p,{children:"Get your AI agent making autonomous payments in under 5 minutes with this step-by-step guide."}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Node.js 18+ or Python 3.8+"}),"\n",(0,r.jsx)(n.li,{children:"A Coinbase Developer Platform account"}),"\n",(0,r.jsx)(n.li,{children:"Basic understanding of AI agent frameworks"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"step-1-install-paystabl-sdk",children:"Step 1: Install PayStabl SDK"}),"\n",(0,r.jsx)(n.h3,{id:"javascripttypescript",children:"JavaScript/TypeScript"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install @paystabl/sdk\n# or\nyarn add @paystabl/sdk\n"})}),"\n",(0,r.jsx)(n.h3,{id:"python",children:"Python"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pip install paystabl-python\n"})}),"\n",(0,r.jsx)(n.h2,{id:"step-2-create-your-agent-wallet",children:"Step 2: Create Your Agent Wallet"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'import { PayStablAgent } from \'@paystabl/sdk\';\n\n// Initialize your agent with a new wallet\nconst agent = new PayStablAgent({\n  name: "my-first-agent",\n  network: "base-sepolia", // Use testnet for development\n});\n\n// Generate a new wallet for your agent\nconst wallet = await agent.createWallet();\nconsole.log("Agent Wallet Address:", wallet.address);\nconsole.log("Save this private key securely:", wallet.privateKey);\n'})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Security Note"}),": Store the private key securely. In production, use environment variables or a secure key management system."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"step-3-fund-your-agent-wallet",children:"Step 3: Fund Your Agent Wallet"}),"\n",(0,r.jsx)(n.p,{children:"For testnet development, get free tokens:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Get Base Sepolia ETH from faucet\ncurl -X POST https://faucet.quicknode.com/base/sepolia \\\n  -H "Content-Type: application/json" \\\n  -d \'{"address": "YOUR_WALLET_ADDRESS"}\'\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Or visit the ",(0,r.jsx)(n.a,{href:"https://faucet.quicknode.com/base/sepolia",children:"Base Sepolia Faucet"})," directly."]}),"\n",(0,r.jsx)(n.h2,{id:"step-4-configure-agent-policies",children:"Step 4: Configure Agent Policies"}),"\n",(0,r.jsx)(n.p,{children:"Set up spending limits and security policies:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'await agent.configurePolicies({\n  dailyLimit: "10.00",     // Maximum $10 per day\n  perCallLimit: "1.00",    // Maximum $1 per transaction\n  allowedDomains: [        // Restrict to trusted APIs\n    "api.example.com",\n    "premium-data.io"\n  ],\n  requireApproval: {       // Require manual approval for large amounts\n    threshold: "5.00"\n  }\n});\n'})}),"\n",(0,r.jsx)(n.h2,{id:"step-5-make-your-first-payment",children:"Step 5: Make Your First Payment"}),"\n",(0,r.jsx)(n.p,{children:"Test the payment system with a simple API call:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Example: Pay for premium weather data\ntry {\n  const result = await agent.pay_api_endpoint({\n    url: "https://api.weatherapi.com/v1/current.json?key=premium&q=London",\n    agentId: "my-first-agent",\n    method: "GET"\n  });\n\n  // Use the payment header in your actual request\n  const response = await fetch(result.url, {\n    headers: {\n      "X-Payment": result.xPaymentHeader,\n      "Content-Type": "application/json"\n    }\n  });\n\n  const data = await response.json();\n  console.log("Weather data:", data);\n  console.log("Payment receipt:", result.receipt);\n\n} catch (error) {\n  console.error("Payment failed:", error.message);\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"step-6-test-agent-to-agent-payments",children:"Step 6: Test Agent-to-Agent Payments"}),"\n",(0,r.jsx)(n.p,{children:"If you have multiple agents, test inter-agent payments:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Agent A pays Agent B for a service\nawait agentA.pay_agent({\n  fromAgentId: "agent-a",\n  toAgentId: "agent-b", \n  amount: "0.50",\n  purpose: "Used summarization service"\n});\n'})}),"\n",(0,r.jsx)(n.h2,{id:"common-integration-patterns",children:"Common Integration Patterns"}),"\n",(0,r.jsx)(n.h3,{id:"claude-mcp-server-integration",children:"Claude MCP Server Integration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Install MCP server\nnpm install @paystabl/mcp-server\n\n// Configure Claude to use PayStabl tools\nconst server = new PayStablMCPServer({\n  agentId: "claude-assistant",\n  apiKey: process.env.PAYSTABL_API_KEY\n});\n\nserver.addTool("premium_search", {\n  description: "Search premium database",\n  handler: async (query) => {\n    return await agent.pay_api_endpoint({\n      url: `https://premium-search.com/api?q=${query}`,\n      agentId: "claude-assistant"\n    });\n  }\n});\n'})}),"\n",(0,r.jsx)(n.h3,{id:"langgraph-integration",children:"LangGraph Integration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from paystabl import PayStablAgent\nfrom langgraph import StateGraph\n\nagent = PayStablAgent(agent_id="langgraph-agent")\n\ndef payment_node(state):\n    """Node that handles paid API calls"""\n    result = agent.pay_api_endpoint(\n        url=state["api_url"],\n        agent_id="langgraph-agent"\n    )\n    return {"payment_result": result}\n\n# Add to your workflow\nworkflow = StateGraph()\nworkflow.add_node("payment", payment_node)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"monitoring-and-debugging",children:"Monitoring and Debugging"}),"\n",(0,r.jsx)(n.h3,{id:"view-transaction-history",children:"View Transaction History"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'// Get recent transactions for your agent\nconst transactions = await agent.getTransactions({\n  limit: 10,\n  status: "completed"\n});\n\ntransactions.forEach(tx => {\n  console.log(`${tx.timestamp}: ${tx.amount} to ${tx.recipient}`);\n});\n'})}),"\n",(0,r.jsx)(n.h3,{id:"check-agent-balance",children:"Check Agent Balance"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const balance = await agent.getBalance();\nconsole.log(`Agent balance: ${balance.eth} ETH`);\nconsole.log(`USD equivalent: $${balance.usd}`);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"try {\n  await agent.pay_api_endpoint({ /* ... */ });\n} catch (error) {\n  switch (error.code) {\n    case 'INSUFFICIENT_FUNDS':\n      console.log(\"Agent needs more funds\");\n      break;\n    case 'POLICY_VIOLATION':\n      console.log(\"Payment blocked by policy:\", error.details);\n      break;\n    case 'API_ERROR':\n      console.log(\"External API error:\", error.message);\n      break;\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsx)(n.p,{children:"Now that your agent is making payments, explore advanced features:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/tools/pay_api_endpoint",children:"Payment Tools"})})," - Learn all available payment functions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/integrations/mcp",children:"Framework Integrations"})})," - Connect with Claude, LangGraph, and more"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/security",children:"Security Guide"})})," - Implement production-ready security"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/examples/claude_demo",children:"Examples"})})," - See real-world implementations"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:'"Insufficient funds" error'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Check your agent's balance with ",(0,r.jsx)(n.code,{children:"agent.getBalance()"})]}),"\n",(0,r.jsx)(n.li,{children:"Fund your wallet using the testnet faucet"}),"\n",(0,r.jsx)(n.li,{children:"Verify you're using the correct network (mainnet vs testnet)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:'"Policy violation" error'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Review your agent's spending limits"}),"\n",(0,r.jsx)(n.li,{children:"Check if the target API is in your allowlist"}),"\n",(0,r.jsx)(n.li,{children:"Verify the transaction amount is within limits"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:'"API not found" error'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Ensure the target API supports x402 protocol"}),"\n",(0,r.jsx)(n.li,{children:"Check the API endpoint URL is correct"}),"\n",(0,r.jsx)(n.li,{children:"Verify your network connectivity"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"getting-help",children:"Getting Help"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://discord.gg/paystabl",children:"Discord Community"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/paystabl/sdk/issues",children:"GitHub Issues"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"mailto:support@paystabl.com",children:"Email Support"})}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Ready to build something awesome? Check out our ",(0,r.jsx)(n.a,{href:"/docs/integrations/mcp",children:"integration guides"})," and ",(0,r.jsx)(n.a,{href:"/docs/examples/claude_demo",children:"examples"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var a=t(6540);const r={},s=a.createContext(r);function i(e){const n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);
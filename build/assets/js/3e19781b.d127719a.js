"use strict";(self.webpackChunkpaystabl_docs=self.webpackChunkpaystabl_docs||[]).push([[417],{8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var t=s(6540);const a={},i=t.createContext(a);function o(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(i.Provider,{value:n},e.children)}},9388:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"examples/claude_demo","title":"Claude MCP Demo","description":"This demo showcases how Claude can use PayStabl to automatically handle payments for premium APIs through the Model Context Protocol (MCP) server integration.","source":"@site/docs/examples/claude_demo.mdx","sourceDirName":"examples","slug":"/examples/claude_demo","permalink":"/examples/claude_demo","draft":false,"unlisted":false,"editUrl":"https://github.com/paystabl/docs/tree/main/docs/examples/claude_demo.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Custom Framework Integration","permalink":"/integrations/custom_frameworks"},"next":{"title":"LangGraph Payment Retry Example","permalink":"/examples/langgraph_retry"}}');var a=s(4848),i=s(8453);const o={},r="Claude MCP Demo",l={},c=[{value:"Demo Overview",id:"demo-overview",level:2},{value:"Setup Instructions",id:"setup-instructions",level:2},{value:"1. Install PayStabl MCP Server",id:"1-install-paystabl-mcp-server",level:3},{value:"2. Configure Claude Desktop",id:"2-configure-claude-desktop",level:3},{value:"3. Fund Your Agent Wallet",id:"3-fund-your-agent-wallet",level:3},{value:"Demo Scenarios",id:"demo-scenarios",level:2},{value:"Scenario 1: Market Data Analysis",id:"scenario-1-market-data-analysis",level:3},{value:"Scenario 2: Document Processing",id:"scenario-2-document-processing",level:3},{value:"Scenario 3: Agent Collaboration",id:"scenario-3-agent-collaboration",level:3},{value:"Interactive Demo Scripts",id:"interactive-demo-scripts",level:2},{value:"Basic Payment Demo",id:"basic-payment-demo",level:3},{value:"Payment Monitoring Script",id:"payment-monitoring-script",level:3},{value:"Error Scenarios Demo",id:"error-scenarios-demo",level:2},{value:"Insufficient Funds",id:"insufficient-funds",level:3},{value:"Service Unavailable",id:"service-unavailable",level:3},{value:"Advanced Demo Features",id:"advanced-demo-features",level:2},{value:"Multi-Agent Workflow",id:"multi-agent-workflow",level:3},{value:"Cost Optimization Demo",id:"cost-optimization-demo",level:3},{value:"Demo Best Practices",id:"demo-best-practices",level:2},{value:"1. Preparation Checklist",id:"1-preparation-checklist",level:3},{value:"2. Demonstration Flow",id:"2-demonstration-flow",level:3},{value:"3. Common Demo Issues",id:"3-common-demo-issues",level:3},{value:"Demo Variations",id:"demo-variations",level:2},{value:"Technical Audience Demo",id:"technical-audience-demo",level:3},{value:"Business Audience Demo",id:"business-audience-demo",level:3},{value:"Developer Audience Demo",id:"developer-audience-demo",level:3},{value:"Related Documentation",id:"related-documentation",level:2},{value:"Support",id:"support",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"claude-mcp-demo",children:"Claude MCP Demo"})}),"\n",(0,a.jsx)(n.p,{children:"This demo showcases how Claude can use PayStabl to automatically handle payments for premium APIs through the Model Context Protocol (MCP) server integration."}),"\n",(0,a.jsx)(n.h2,{id:"demo-overview",children:"Demo Overview"}),"\n",(0,a.jsx)(n.p,{children:"In this example, Claude will:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Receive a request for premium data analysis"}),"\n",(0,a.jsx)(n.li,{children:"Automatically pay for required API access"}),"\n",(0,a.jsx)(n.li,{children:"Process the data and return results"}),"\n",(0,a.jsx)(n.li,{children:"Handle payment receipts and error scenarios"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"setup-instructions",children:"Setup Instructions"}),"\n",(0,a.jsx)(n.h3,{id:"1-install-paystabl-mcp-server",children:"1. Install PayStabl MCP Server"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install -g @paystabl/mcp-server\n"})}),"\n",(0,a.jsx)(n.h3,{id:"2-configure-claude-desktop",children:"2. Configure Claude Desktop"}),"\n",(0,a.jsx)(n.p,{children:"Add PayStabl to your Claude Desktop configuration:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "mcpServers": {\n    "paystabl": {\n      "command": "paystabl-mcp-server",\n      "args": ["--agent-id", "claude-demo"],\n      "env": {\n        "PAYSTABL_API_KEY": "your-api-key-here",\n        "PAYSTABL_NETWORK": "base-sepolia"\n      }\n    }\n  }\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"3-fund-your-agent-wallet",children:"3. Fund Your Agent Wallet"}),"\n",(0,a.jsx)(n.p,{children:"Get testnet funds for demonstration:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Request Base Sepolia ETH\ncurl -X POST https://faucet.quicknode.com/base/sepolia \\\n  -H "Content-Type: application/json" \\\n  -d \'{"address": "YOUR_WALLET_ADDRESS"}\'\n'})}),"\n",(0,a.jsx)(n.h2,{id:"demo-scenarios",children:"Demo Scenarios"}),"\n",(0,a.jsx)(n.h3,{id:"scenario-1-market-data-analysis",children:"Scenario 1: Market Data Analysis"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"User Request:"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:'"Get the latest crypto market data and analyze the trends for Bitcoin and Ethereum"'}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Claude's Response:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"I'll get the latest crypto market data for you and analyze the trends.\n\nFirst, let me access the premium market data API...\n\n[Using pay_for_api tool internally]\n\u2705 Payment processed: $2.50 to CryptoMarketAPI\nTransaction: 0x1234abcd...\n\nNow analyzing the data:\n\n**Bitcoin (BTC)**\n- Current Price: $43,250\n- 24h Change: +2.3% \n- Volume: $28.5B\n- Trend: Bullish momentum with strong support at $42K\n\n**Ethereum (ETH)**  \n- Current Price: $2,580\n- 24h Change: +1.8%\n- Volume: $15.2B\n- Trend: Steady growth following BTC, resistance at $2.6K\n\n**Analysis:**\nThe market shows positive sentiment with both major cryptocurrencies gaining. Bitcoin's break above $43K suggests continued upward momentum, while Ethereum is consolidating before a potential breakout.\n\nPayment Summary: $2.50 for premium market data access\n"})}),"\n",(0,a.jsx)(n.h3,{id:"scenario-2-document-processing",children:"Scenario 2: Document Processing"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"User Request:"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:'"Analyze this contract PDF and extract key terms and potential risks"'}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Claude's Response:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"I'll analyze your contract PDF for key terms and risks.\n\n[Uploading document to premium analysis service...]\n\n[Using pay_for_api tool]\n\u2705 Payment processed: $5.00 to LegalAnalysisAPI\nTransaction: 0x5678efgh...\n\n**Key Terms Identified:**\n- Contract Duration: 24 months\n- Payment Terms: Net 30 days\n- Termination Clause: 60-day notice required\n- Liability Cap: $100,000\n- Intellectual Property: All rights retained by creator\n\n**Risk Assessment:**\n\ud83d\udd34 **High Risk:** Unlimited liability clause in section 4.2\n\ud83d\udfe1 **Medium Risk:** Vague delivery timelines \n\ud83d\udfe2 **Low Risk:** Standard termination provisions\n\n**Recommendations:**\n1. Negotiate liability cap in section 4.2\n2. Define specific delivery milestones\n3. Add force majeure clause\n\nPayment Summary: $5.00 for legal document analysis\n"})}),"\n",(0,a.jsx)(n.h3,{id:"scenario-3-agent-collaboration",children:"Scenario 3: Agent Collaboration"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"User Request:"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:'"I need a comprehensive research report on AI agent frameworks. Can you coordinate with specialist agents?"'}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Claude's Response:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"I'll coordinate with specialist research agents to create a comprehensive report.\n\n**Phase 1: Research Coordination**\n\n[Using pay_agent tool]\n\u2705 Paid Research Agent: $8.00\nPurpose: AI framework landscape analysis\nTransaction: 0x9abc1234...\n\n[Using pay_agent tool]  \n\u2705 Paid Technical Writer: $12.00\nPurpose: Report compilation and formatting\nTransaction: 0xdef56789...\n\n**Phase 2: Data Collection**\n\n[Using pay_for_api tool]\n\u2705 Paid Academic Database: $6.00\nPurpose: Recent research papers and studies\nTransaction: 0x1111aaaa...\n\n**Research Report: AI Agent Frameworks 2024**\n\n**Executive Summary:**\nThe AI agent framework landscape has evolved rapidly, with 3 major categories emerging...\n\n[Full detailed report with citations, comparisons, and recommendations]\n\n**Payment Summary:**\n- Research Agent: $8.00\n- Technical Writer: $12.00  \n- Academic Database: $6.00\n- **Total: $26.00**\n\nAll payments completed successfully with full audit trail.\n"})}),"\n",(0,a.jsx)(n.h2,{id:"interactive-demo-scripts",children:"Interactive Demo Scripts"}),"\n",(0,a.jsx)(n.h3,{id:"basic-payment-demo",children:"Basic Payment Demo"}),"\n",(0,a.jsx)(n.p,{children:"Create a simple script to test Claude's payment capabilities:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'// demo-script.js\nconst readline = require(\'readline\');\n\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nconst demoScenarios = {\n  weather: {\n    prompt: "Get premium weather forecast for San Francisco with detailed hourly breakdown",\n    expectedCost: "$1.50",\n    api: "WeatherPro API"\n  },\n  sentiment: {\n    prompt: "Analyze the sentiment of this text: \'PayStabl is revolutionizing how AI agents handle payments\'",\n    expectedCost: "$0.75",\n    api: "SentimentAnalysis API"  \n  },\n  translation: {\n    prompt: "Translate this technical document from English to Japanese with domain expertise",\n    expectedCost: "$3.25",\n    api: "TechnicalTranslation API"\n  }\n};\n\nconsole.log("\ud83e\udd16 Claude PayStabl Demo");\nconsole.log("========================");\nconsole.log("\\nAvailable demo scenarios:");\n\nObject.keys(demoScenarios).forEach((key, index) => {\n  const scenario = demoScenarios[key];\n  console.log(`${index + 1}. ${key.toUpperCase()}: ${scenario.expectedCost} - ${scenario.api}`);\n});\n\nrl.question(\'\\nSelect a scenario (1-3) or type a custom request: \', (answer) => {\n  const scenarioKeys = Object.keys(demoScenarios);\n  const selectedIndex = parseInt(answer) - 1;\n  \n  if (selectedIndex >= 0 && selectedIndex < scenarioKeys.length) {\n    const scenario = demoScenarios[scenarioKeys[selectedIndex]];\n    console.log(`\\n\ud83d\udccb Demo Scenario: ${scenario.prompt}`);\n    console.log(`\ud83d\udcb0 Expected Cost: ${scenario.expectedCost}`);\n    console.log(`\ud83d\udd17 API: ${scenario.api}`);\n    console.log("\\n\u2728 Now ask Claude: \\"" + scenario.prompt + "\\"");\n  } else {\n    console.log(`\\n\ud83d\udccb Custom Request: ${answer}`);\n    console.log("\\n\u2728 Ask Claude this question and watch PayStabl handle payments automatically!");\n  }\n  \n  rl.close();\n});\n'})}),"\n",(0,a.jsx)(n.p,{children:"Run the demo:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"node demo-script.js\n"})}),"\n",(0,a.jsx)(n.h3,{id:"payment-monitoring-script",children:"Payment Monitoring Script"}),"\n",(0,a.jsx)(n.p,{children:"Monitor Claude's payment activity in real-time:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'// payment-monitor.js\nconst { PayStablAgent } = require(\'@paystabl/sdk\');\n\nclass ClaudePaymentMonitor {\n  constructor() {\n    this.agent = new PayStablAgent({\n      agentId: "claude-demo",\n      network: "base-sepolia"\n    });\n    \n    this.startTime = Date.now();\n    this.totalSpent = 0;\n    this.transactionCount = 0;\n  }\n  \n  async startMonitoring() {\n    console.log("\ud83d\udd0d Monitoring Claude\'s PayStabl Activity");\n    console.log("======================================");\n    \n    // Display initial balance\n    const balance = await this.agent.getBalance();\n    console.log(`\ud83d\udcb0 Starting Balance: ${balance.eth} ETH`);\n    console.log(`\ud83c\udd94 Agent ID: claude-demo`);\n    console.log(`\ud83c\udf10 Network: Base Sepolia`);\n    console.log("");\n    \n    // Monitor transactions every 10 seconds\n    setInterval(async () => {\n      await this.checkRecentActivity();\n    }, 10000);\n    \n    // Display summary every minute\n    setInterval(() => {\n      this.displaySummary();\n    }, 60000);\n  }\n  \n  async checkRecentActivity() {\n    try {\n      const recent = await this.agent.getTransactions({\n        limit: 5,\n        since: new Date(Date.now() - 15000) // Last 15 seconds\n      });\n      \n      recent.forEach(tx => {\n        if (!this.processedTxs.has(tx.txHash)) {\n          this.processedTxs.add(tx.txHash);\n          this.logTransaction(tx);\n          \n          if (tx.status === \'completed\') {\n            this.totalSpent += parseFloat(tx.amount);\n            this.transactionCount++;\n          }\n        }\n      });\n    } catch (error) {\n      console.error("Error checking activity:", error.message);\n    }\n  }\n  \n  logTransaction(tx) {\n    const timestamp = new Date().toLocaleTimeString();\n    const status = tx.status === \'completed\' ? \'\u2705\' : \n                  tx.status === \'failed\' ? \'\u274c\' : \'\u23f3\';\n    \n    console.log(`[${timestamp}] ${status} ${tx.type.toUpperCase()}`);\n    console.log(`  Amount: $${tx.amount}`);\n    console.log(`  Purpose: ${tx.purpose || \'N/A\'}`);\n    console.log(`  Hash: ${tx.txHash.substring(0, 10)}...`);\n    console.log("");\n  }\n  \n  displaySummary() {\n    const runtime = Math.floor((Date.now() - this.startTime) / 1000 / 60);\n    \n    console.log("\ud83d\udcca PAYMENT SUMMARY");\n    console.log("==================");\n    console.log(`\u23f1\ufe0f  Runtime: ${runtime} minutes`);\n    console.log(`\ud83d\udcb8 Total Spent: $${this.totalSpent.toFixed(2)}`);\n    console.log(`\ud83d\udcc8 Transactions: ${this.transactionCount}`);\n    console.log(`\ud83d\udcb0 Avg per Transaction: $${(this.totalSpent / Math.max(this.transactionCount, 1)).toFixed(2)}`);\n    console.log("");\n  }\n  \n  processedTxs = new Set();\n}\n\n// Start monitoring\nconst monitor = new ClaudePaymentMonitor();\nmonitor.startMonitoring().catch(console.error);\n\n// Graceful shutdown\nprocess.on(\'SIGINT\', () => {\n  console.log("\\n\ud83d\udc4b Stopping payment monitor...");\n  process.exit(0);\n});\n'})}),"\n",(0,a.jsx)(n.p,{children:"Run the monitor:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"node payment-monitor.js\n"})}),"\n",(0,a.jsx)(n.h2,{id:"error-scenarios-demo",children:"Error Scenarios Demo"}),"\n",(0,a.jsx)(n.h3,{id:"insufficient-funds",children:"Insufficient Funds"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"User Request:"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:'"Analyze this large dataset with the most expensive AI model available"'}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Claude's Response:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"I'll analyze your dataset with our premium AI model.\n\n[Attempting payment...]\n\n\u274c Payment failed: Insufficient funds in agent wallet\n\nCurrent balance: $2.15\nRequired amount: $15.00\n\nI need additional funding to access the premium AI model. Here are your options:\n\n1. **Add funds to agent wallet**\n   - Visit: https://faucet.quicknode.com/base/sepolia\n   - Request testnet ETH for demonstration\n\n2. **Use standard analysis** (Available for $2.00)\n   - Slightly less detailed but still comprehensive\n   - Would you like me to proceed with this option?\n\n3. **Request funding approval**\n   - I can notify administrators for funding approval\n\nWhat would you prefer?\n"})}),"\n",(0,a.jsx)(n.h3,{id:"service-unavailable",children:"Service Unavailable"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"User Request:"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:'"Get real-time stock prices for AAPL, GOOGL, and TSLA"'}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Claude's Response:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"I'll get the latest stock prices for you.\n\n[Attempting to access MarketData API...]\n\n\u26a0\ufe0f Primary service unavailable (HTTP 503)\n\nLet me try alternative data sources...\n\n[Using pay_for_api with backup service]\n\u2705 Payment processed: $1.75 to AlternativeMarketAPI\nTransaction: 0xbackup123...\n\n**Stock Prices** (via backup service):\n- AAPL: $185.43 (+1.2%)\n- GOOGL: $142.17 (+0.8%) \n- TSLA: $248.91 (+2.1%)\n\n*Note: Used backup service due to primary API maintenance*\nPayment: $1.75 (vs $1.25 for primary service)\n"})}),"\n",(0,a.jsx)(n.h2,{id:"advanced-demo-features",children:"Advanced Demo Features"}),"\n",(0,a.jsx)(n.h3,{id:"multi-agent-workflow",children:"Multi-Agent Workflow"}),"\n",(0,a.jsx)(n.p,{children:"Demonstrate complex agent collaboration:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'// multi-agent-demo.js\nconst scenarios = [\n  {\n    name: "Research & Analysis Pipeline",\n    description: "Claude coordinates multiple specialist agents",\n    agents: [\n      { name: "Data Collector", cost: "$3.00", task: "Gather research data" },\n      { name: "Statistical Analyst", cost: "$5.00", task: "Perform statistical analysis" },\n      { name: "Report Writer", cost: "$4.00", task: "Generate final report" }\n    ],\n    totalCost: "$12.00",\n    prompt: "Create a market analysis report for the renewable energy sector"\n  },\n  {\n    name: "Content Creation Workflow", \n    description: "Multi-step content generation with specialist agents",\n    agents: [\n      { name: "Research Agent", cost: "$2.50", task: "Topic research" },\n      { name: "Content Writer", cost: "$6.00", task: "Draft creation" },\n      { name: "Editor Agent", cost: "$3.50", task: "Content refinement" },\n      { name: "SEO Optimizer", cost: "$2.00", task: "SEO optimization" }\n    ],\n    totalCost: "$14.00",\n    prompt: "Create an SEO-optimized blog post about AI agent payment systems"\n  }\n];\n\nfunction displayScenario(scenario) {\n  console.log(`\\n\ud83c\udfac ${scenario.name}`);\n  console.log("=".repeat(scenario.name.length + 3));\n  console.log(scenario.description);\n  console.log(`\ud83d\udcb0 Total Cost: ${scenario.totalCost}`);\n  console.log("\\n\ud83d\udc65 Agent Workflow:");\n  \n  scenario.agents.forEach((agent, index) => {\n    console.log(`  ${index + 1}. ${agent.name} (${agent.cost}) - ${agent.task}`);\n  });\n  \n  console.log(`\\n\ud83d\udcdd Prompt: "${scenario.prompt}"`);\n  console.log("\\n" + "=".repeat(50));\n}\n\nconsole.log("\ud83e\udd16 Multi-Agent PayStabl Demo");\nconsole.log("Multi-agent workflows with automatic payment handling\\n");\n\nscenarios.forEach(displayScenario);\n\nconsole.log("\\n\u2728 Try any of these prompts with Claude to see PayStabl");\nconsole.log("   coordinate payments across multiple agents automatically!");\n'})}),"\n",(0,a.jsx)(n.h3,{id:"cost-optimization-demo",children:"Cost Optimization Demo"}),"\n",(0,a.jsx)(n.p,{children:"Show how PayStabl optimizes costs:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'// cost-optimization-demo.js\nconst costScenarios = [\n  {\n    task: "Text summarization",\n    options: [\n      { service: "Premium AI", cost: "$2.50", quality: "Excellent" },\n      { service: "Standard AI", cost: "$1.00", quality: "Good" },\n      { service: "Basic AI", cost: "$0.25", quality: "Adequate" }\n    ],\n    recommendation: "Standard AI - best value for quality"\n  },\n  {\n    task: "Language translation", \n    options: [\n      { service: "Human Expert", cost: "$15.00", quality: "Perfect" },\n      { service: "Advanced AI", cost: "$3.00", quality: "Excellent" },\n      { service: "Basic Translation", cost: "$0.50", quality: "Fair" }\n    ],\n    recommendation: "Advanced AI - professional quality at low cost"\n  }\n];\n\nfunction demonstrateCostOptimization() {\n  console.log("\ud83d\udca1 PayStabl Cost Optimization");\n  console.log("==============================");\n  \n  costScenarios.forEach(scenario => {\n    console.log(`\\n\ud83d\udccb Task: ${scenario.task}`);\n    console.log("Options available:");\n    \n    scenario.options.forEach((option, index) => {\n      const selected = option.service.includes(scenario.recommendation.split(\' \')[0]) ? "\ud83d\udc4d" : "  ";\n      console.log(`  ${selected} ${option.service}: ${option.cost} (${option.quality})`);\n    });\n    \n    console.log(`\ud83c\udfaf Recommended: ${scenario.recommendation}`);\n  });\n  \n  console.log("\\n\u2728 PayStabl automatically selects the best value option");\n  console.log("   based on your budget and quality requirements!");\n}\n\ndemonstrateCostOptimization();\n'})}),"\n",(0,a.jsx)(n.h2,{id:"demo-best-practices",children:"Demo Best Practices"}),"\n",(0,a.jsx)(n.h3,{id:"1-preparation-checklist",children:"1. Preparation Checklist"}),"\n",(0,a.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","MCP server installed and configured"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Agent wallet funded with testnet ETH"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Claude Desktop restarted after configuration"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Payment monitoring script ready"]}),"\n",(0,a.jsxs)(n.li,{className:"task-list-item",children:[(0,a.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Demo scenarios planned"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"2-demonstration-flow",children:"2. Demonstration Flow"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Introduction"})," (2 minutes)"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Explain PayStabl concept"}),"\n",(0,a.jsx)(n.li,{children:"Show agent wallet balance"}),"\n",(0,a.jsx)(n.li,{children:"Start payment monitor"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Simple Payment Demo"})," (3 minutes)"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Basic API payment request"}),"\n",(0,a.jsx)(n.li,{children:"Show automatic x402 handling"}),"\n",(0,a.jsx)(n.li,{children:"Display payment receipt"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Complex Workflow"})," (5 minutes)"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Multi-agent collaboration"}),"\n",(0,a.jsx)(n.li,{children:"Real-time payment tracking"}),"\n",(0,a.jsx)(n.li,{children:"Cost breakdown explanation"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Error Handling"})," (2 minutes)"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Insufficient funds scenario"}),"\n",(0,a.jsx)(n.li,{children:"Service unavailability handling"}),"\n",(0,a.jsx)(n.li,{children:"Recovery strategies"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Q&A and Discussion"})," (3 minutes)"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Technical questions"}),"\n",(0,a.jsx)(n.li,{children:"Use case discussion"}),"\n",(0,a.jsx)(n.li,{children:"Integration possibilities"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"3-common-demo-issues",children:"3. Common Demo Issues"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Issue:"})," Claude doesn't show payment tools"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Solution:"})," Restart Claude Desktop after MCP configuration"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Issue:"})," Payment failures during demo"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Solution:"})," Check testnet fund balance before starting"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Issue:"})," Slow transaction confirmations"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Solution:"})," Use Base Sepolia (faster than Ethereum Sepolia)"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Issue:"})," MCP server connection errors"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Solution:"})," Verify API key and network settings"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"demo-variations",children:"Demo Variations"}),"\n",(0,a.jsx)(n.h3,{id:"technical-audience-demo",children:"Technical Audience Demo"}),"\n",(0,a.jsx)(n.p,{children:"Focus on:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"x402 protocol details"}),"\n",(0,a.jsx)(n.li,{children:"Smart contract interactions"}),"\n",(0,a.jsx)(n.li,{children:"Security and policy features"}),"\n",(0,a.jsx)(n.li,{children:"Integration architecture"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"business-audience-demo",children:"Business Audience Demo"}),"\n",(0,a.jsx)(n.p,{children:"Focus on:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Cost savings and efficiency"}),"\n",(0,a.jsx)(n.li,{children:"Autonomous operation benefits"}),"\n",(0,a.jsx)(n.li,{children:"Use case scenarios"}),"\n",(0,a.jsx)(n.li,{children:"ROI calculations"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"developer-audience-demo",children:"Developer Audience Demo"}),"\n",(0,a.jsx)(n.p,{children:"Focus on:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"SDK integration examples"}),"\n",(0,a.jsx)(n.li,{children:"Custom framework implementations"}),"\n",(0,a.jsx)(n.li,{children:"Testing and debugging tools"}),"\n",(0,a.jsx)(n.li,{children:"Production deployment strategies"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/integrations/mcp",children:"MCP Integration Guide"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/quickstart",children:"Quickstart Guide"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/security",children:"Security Features"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"/docs/architecture",children:"Cost Optimization"})}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"support",children:"Support"}),"\n",(0,a.jsx)(n.p,{children:"For demo support and questions:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://discord.gg/paystabl",children:"Discord Demo Channel"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://paystabl.com/demos",children:"Demo Video Tutorials"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"mailto:demo@paystabl.com",children:"Email Support"})}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);
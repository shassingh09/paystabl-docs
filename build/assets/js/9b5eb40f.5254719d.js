"use strict";(self.webpackChunkpaystabl_docs=self.webpackChunkpaystabl_docs||[]).push([[212],{6822:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"tools/pay_api_endpoint","title":"\ud83d\udee0\ufe0f Tool: pay_api_endpoint","description":"Use this tool to call external APIs that support the x402 protocol via a 402 Payment Required response. PayStabl handles the full payment flow, including generating the signed X-Payment header and retrying the request.","source":"@site/docs/tools/pay_api_endpoint.mdx","sourceDirName":"tools","slug":"/tools/pay_api_endpoint","permalink":"/tools/pay_api_endpoint","draft":false,"unlisted":false,"editUrl":"https://github.com/paystabl/docs/tree/main/docs/tools/pay_api_endpoint.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Pay Agent Utility","permalink":"/tools/pay_agent"},"next":{"title":"x402 Headers Reference","permalink":"/reference/x402_headers"}}');var s=t(4848),a=t(8453);const i={},d="\ud83d\udee0\ufe0f Tool: pay_api_endpoint",l={},c=[{value:"\ud83d\udd04 Workflow",id:"-workflow",level:2},{value:"\u2705 Input",id:"-input",level:2},{value:"\ud83e\uddfe Output",id:"-output",level:2},{value:"\ud83e\uddea Example Usage (JS)",id:"-example-usage-js",level:2},{value:"\ud83d\udee1\ufe0f Notes",id:"\ufe0f-notes",level:2},{value:"Detailed API Reference",id:"detailed-api-reference",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Response Fields",id:"response-fields",level:3},{value:"Advanced Usage",id:"advanced-usage",level:2},{value:"Error Handling",id:"error-handling",level:3},{value:"Batch Payments",id:"batch-payments",level:3},{value:"Dynamic Pricing Support",id:"dynamic-pricing-support",level:3},{value:"Integration Examples",id:"integration-examples",level:2},{value:"Claude MCP Server",id:"claude-mcp-server",level:3},{value:"LangGraph Node",id:"langgraph-node",level:3},{value:"Security Considerations",id:"security-considerations",level:2},{value:"Agent Policies",id:"agent-policies",level:3},{value:"Monitoring",id:"monitoring",level:3},{value:"Related Tools",id:"related-tools",level:2},{value:"Support",id:"support",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsxs)(n.h1,{id:"\ufe0f-tool-pay_api_endpoint",children:["\ud83d\udee0\ufe0f Tool: ",(0,s.jsx)(n.code,{children:"pay_api_endpoint"})]})}),"\n",(0,s.jsxs)(n.p,{children:["Use this tool to call external APIs that support the ",(0,s.jsx)(n.strong,{children:"x402 protocol"})," via a ",(0,s.jsx)(n.code,{children:"402 Payment Required"})," response. PayStabl handles the full payment flow, including generating the signed ",(0,s.jsx)(n.code,{children:"X-Payment"})," header and retrying the request."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-workflow",children:"\ud83d\udd04 Workflow"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Agent attempts to access an x402-enabled API."}),"\n",(0,s.jsxs)(n.li,{children:["The server responds with ",(0,s.jsx)(n.code,{children:"402 Payment Required"}),", including ",(0,s.jsx)(n.code,{children:"accepts"})," array."]}),"\n",(0,s.jsxs)(n.li,{children:["Agent calls ",(0,s.jsx)(n.code,{children:"pay_api_endpoint()"})," with the endpoint and metadata."]}),"\n",(0,s.jsxs)(n.li,{children:["PayStabl returns a valid ",(0,s.jsx)(n.code,{children:"X-Payment"})," header."]}),"\n",(0,s.jsx)(n.li,{children:"Agent retries the original request with the header."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-input",children:"\u2705 Input"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "agentId": "agent_abc",\n  "url": "https://api.example.com/paid-resource",\n  "method": "GET",\n  "data": {}, // optional for POST\n  "headers": { "User-Agent": "Claude v3" } // optional\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"-output",children:"\ud83e\uddfe Output"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "xPaymentHeader": "0x...",\n  "receipt": {\n    "txHash": "...",\n    "amount": "0.10",\n    "to": "0x123...",\n    "agentId": "agent_abc"\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"-example-usage-js",children:"\ud83e\uddea Example Usage (JS)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'const result = await pay_api_endpoint({\n  agentId: "agent_abc",\n  url: "https://api.example.com/convert-pdf",\n});\n\nfetch(url, {\n  headers: { "X-Payment": result.xPaymentHeader }\n});\n'})}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-notes",children:"\ud83d\udee1\ufe0f Notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The original API must return 402 and provide an accepts array (per x402 spec)."}),"\n",(0,s.jsx)(n.li,{children:"Agent must be onboarded to PayStabl and have a funded wallet."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"detailed-api-reference",children:"Detailed API Reference"}),"\n",(0,s.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Parameter"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Required"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"agentId"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Unique identifier for the paying agent"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"url"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Target API endpoint URL"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"method"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:'HTTP method (default: "GET")'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"data"})}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"Request body for POST/PUT requests"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"headers"})}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"Additional headers to include"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"timeout"})}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"Request timeout in milliseconds (default: 30000)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"retries"})}),(0,s.jsx)(n.td,{children:"number"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"Number of retry attempts (default: 3)"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"response-fields",children:"Response Fields"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"xPaymentHeader"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Signed payment header for the request"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"receipt"})}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{children:"Transaction receipt details"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"receipt.txHash"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Blockchain transaction hash"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"receipt.amount"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Payment amount in USD"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"receipt.to"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Recipient wallet address"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"receipt.timestamp"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"Transaction timestamp (ISO 8601)"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"advanced-usage",children:"Advanced Usage"}),"\n",(0,s.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'try {\n  const result = await pay_api_endpoint({\n    agentId: "weather_agent",\n    url: "https://premium-weather.com/api/forecast"\n  });\n  \n  // Make the actual API request\n  const response = await fetch(result.url, {\n    headers: { "X-Payment": result.xPaymentHeader }\n  });\n  \n  if (response.status === 402) {\n    throw new Error("Payment was not accepted by the API");\n  }\n  \n  const data = await response.json();\n  return data;\n  \n} catch (error) {\n  if (error.code === \'INSUFFICIENT_FUNDS\') {\n    console.log("Agent wallet needs funding");\n  } else if (error.code === \'POLICY_VIOLATION\') {\n    console.log("Payment blocked by agent policy");\n  } else {\n    console.log("Payment failed:", error.message);\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"batch-payments",children:"Batch Payments"}),"\n",(0,s.jsx)(n.p,{children:"For multiple API calls, you can batch them efficiently:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'const endpoints = [\n  "https://api.service1.com/data",\n  "https://api.service2.com/analyze",\n  "https://api.service3.com/process"\n];\n\nconst payments = await Promise.all(\n  endpoints.map(url => pay_api_endpoint({\n    agentId: "batch_agent",\n    url\n  }))\n);\n\n// Execute all requests with payment headers\nconst responses = await Promise.all(\n  payments.map((payment, index) => \n    fetch(endpoints[index], {\n      headers: { "X-Payment": payment.xPaymentHeader }\n    })\n  )\n);\n'})}),"\n",(0,s.jsx)(n.h3,{id:"dynamic-pricing-support",children:"Dynamic Pricing Support"}),"\n",(0,s.jsx)(n.p,{children:"Some APIs may return different prices based on the request:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// First, check the price without paying\nconst priceCheck = await fetch("https://api.service.com/price-check", {\n  method: "POST",\n  headers: { "Content-Type": "application/json" },\n  body: JSON.stringify({ query: "complex_analysis" })\n});\n\nif (priceCheck.status === 402) {\n  const priceInfo = await priceCheck.json();\n  console.log(`This request will cost: $${priceInfo.amount}`);\n  \n  // Proceed with payment if acceptable\n  if (parseFloat(priceInfo.amount) <= 1.00) {\n    const payment = await pay_api_endpoint({\n      agentId: "price_conscious_agent",\n      url: "https://api.service.com/analyze",\n      method: "POST",\n      data: { query: "complex_analysis" }\n    });\n    \n    // Continue with the paid request...\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"integration-examples",children:"Integration Examples"}),"\n",(0,s.jsx)(n.h3,{id:"claude-mcp-server",children:"Claude MCP Server"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { PayStablMCPServer } from \'@paystabl/mcp-server\';\n\nconst server = new PayStablMCPServer({\n  agentId: "claude_assistant"\n});\n\nserver.addTool("premium_search", {\n  description: "Search premium database with payment",\n  parameters: {\n    type: "object",\n    properties: {\n      query: { type: "string", description: "Search query" }\n    }\n  },\n  handler: async ({ query }) => {\n    const payment = await pay_api_endpoint({\n      agentId: "claude_assistant",\n      url: `https://premium-search.com/api?q=${encodeURIComponent(query)}`\n    });\n    \n    const response = await fetch(payment.url, {\n      headers: { "X-Payment": payment.xPaymentHeader }\n    });\n    \n    return await response.json();\n  }\n});\n'})}),"\n",(0,s.jsx)(n.h3,{id:"langgraph-node",children:"LangGraph Node"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from paystabl import PayStablAgent\n\ndef create_payment_node(agent: PayStablAgent):\n    def payment_node(state):\n        result = agent.pay_api_endpoint(\n            agent_id=state["agent_id"],\n            url=state["api_url"],\n            method=state.get("method", "GET"),\n            data=state.get("data")\n        )\n        \n        # Store payment info in state\n        return {\n            "payment_header": result["xPaymentHeader"],\n            "payment_receipt": result["receipt"]\n        }\n    \n    return payment_node\n'})}),"\n",(0,s.jsx)(n.h2,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,s.jsx)(n.h3,{id:"agent-policies",children:"Agent Policies"}),"\n",(0,s.jsx)(n.p,{children:"Always configure appropriate policies for your agents:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'await agent.configurePolicies({\n  dailyLimit: "50.00",\n  perCallLimit: "5.00",\n  allowedDomains: [\n    "trusted-api.com",\n    "premium-service.io"\n  ],\n  timeRestrictions: {\n    allowedHours: [9, 17], // 9 AM to 5 PM\n    timezone: "UTC"\n  }\n});\n'})}),"\n",(0,s.jsx)(n.h3,{id:"monitoring",children:"Monitoring"}),"\n",(0,s.jsx)(n.p,{children:"Monitor your agent's spending:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:'// Check recent transactions\nconst transactions = await agent.getTransactions({\n  since: "2024-01-01",\n  status: "completed"\n});\n\n// Set up alerts for unusual activity\nconst dailySpend = transactions\n  .filter(tx => tx.timestamp > startOfDay)\n  .reduce((sum, tx) => sum + parseFloat(tx.amount), 0);\n\nif (dailySpend > 100) {\n  console.warn("High spending detected:", dailySpend);\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"related-tools",children:"Related Tools"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/tools/pay_agent",children:(0,s.jsx)(n.code,{children:"pay_agent"})})," - Send payments between agents"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/reference/x402_headers",children:"x402 Headers Reference"})," - Technical specification"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/security",children:"Security Guide"})," - Best practices for production"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"support",children:"Support"}),"\n",(0,s.jsxs)(n.p,{children:["Having issues with API payments? Check our ",(0,s.jsx)(n.a,{href:"/docs/troubleshooting",children:"troubleshooting guide"})," or reach out:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://discord.gg/paystabl",children:"Discord Community"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/paystabl/sdk/issues",children:"GitHub Issues"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"mailto:support@paystabl.com",children:"Email Support"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>d});var r=t(6540);const s={},a=r.createContext(s);function i(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);
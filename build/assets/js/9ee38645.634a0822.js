"use strict";(self.webpackChunkpaystabl_docs=self.webpackChunkpaystabl_docs||[]).push([[550],{8453:(n,e,a)=>{a.d(e,{R:()=>o,x:()=>i});var t=a(6540);const s={},r=t.createContext(s);function o(n){const e=t.useContext(r);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:o(n.components),t.createElement(r.Provider,{value:e},n.children)}},9878:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"integrations/n8n","title":"n8n Integration","description":"Integrate PayStabl with n8n workflows to add autonomous payment capabilities to your automation workflows. Enable bots to pay for premium APIs, compensate agents, and handle transaction flows seamlessly.","source":"@site/docs/integrations/n8n.mdx","sourceDirName":"integrations","slug":"/integrations/n8n","permalink":"/integrations/n8n","draft":false,"unlisted":false,"editUrl":"https://github.com/paystabl/docs/tree/main/docs/integrations/n8n.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"LangGraph Integration","permalink":"/integrations/langgraph"},"next":{"title":"Custom Framework Integration","permalink":"/integrations/custom_frameworks"}}');var s=a(4848),r=a(8453);const o={},i="n8n Integration",l={},d=[{value:"Quick Setup",id:"quick-setup",level:2},{value:"Available Nodes",id:"available-nodes",level:2},{value:"PayStabl API Payment Node",id:"paystabl-api-payment-node",level:3},{value:"PayStabl Agent Payment Node",id:"paystabl-agent-payment-node",level:3},{value:"PayStabl Balance Check Node",id:"paystabl-balance-check-node",level:3},{value:"Example Workflows",id:"example-workflows",level:2},{value:"Premium Data Processing Pipeline",id:"premium-data-processing-pipeline",level:3},{value:"Agent Collaboration Workflow",id:"agent-collaboration-workflow",level:3},{value:"Cost Monitoring Workflow",id:"cost-monitoring-workflow",level:3},{value:"Advanced Features",id:"advanced-features",level:2},{value:"Conditional Payments",id:"conditional-payments",level:3},{value:"Bulk Payment Processing",id:"bulk-payment-processing",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Payment Failure Recovery",id:"payment-failure-recovery",level:3},{value:"Balance Monitoring and Auto-funding",id:"balance-monitoring-and-auto-funding",level:3},{value:"Workflow Templates",id:"workflow-templates",level:2},{value:"Customer Service Bot",id:"customer-service-bot",level:3},{value:"Research Automation",id:"research-automation",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Workflow Design",id:"workflow-design",level:3},{value:"Security Considerations",id:"security-considerations",level:3},{value:"Performance Optimization",id:"performance-optimization",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Common Issues",id:"common-issues",level:3},{value:"Debug Mode",id:"debug-mode",level:3},{value:"Related Documentation",id:"related-documentation",level:2},{value:"Support",id:"support",level:2}];function c(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"n8n-integration",children:"n8n Integration"})}),"\n",(0,s.jsx)(e.p,{children:"Integrate PayStabl with n8n workflows to add autonomous payment capabilities to your automation workflows. Enable bots to pay for premium APIs, compensate agents, and handle transaction flows seamlessly."}),"\n",(0,s.jsx)(e.h2,{id:"quick-setup",children:"Quick Setup"}),"\n",(0,s.jsx)(e.p,{children:"Install the PayStabl n8n community nodes:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Install via n8n community nodes\nnpm install n8n-nodes-paystabl\n"})}),"\n",(0,s.jsx)(e.p,{children:"Or add via n8n interface:"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsx)(e.li,{children:"Go to Settings \u2192 Community Nodes"}),"\n",(0,s.jsxs)(e.li,{children:["Install: ",(0,s.jsx)(e.code,{children:"n8n-nodes-paystabl"})]}),"\n",(0,s.jsx)(e.li,{children:"Restart n8n instance"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"available-nodes",children:"Available Nodes"}),"\n",(0,s.jsx)(e.h3,{id:"paystabl-api-payment-node",children:"PayStabl API Payment Node"}),"\n",(0,s.jsx)(e.p,{children:"Handle x402 payment requests automatically within your workflows:"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Node Configuration:"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Agent ID"}),": Your registered PayStabl agent identifier"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"API URL"}),": Target endpoint that requires payment"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"HTTP Method"}),": GET, POST, PUT, DELETE"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Request Body"}),": JSON payload for POST/PUT requests"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Headers"}),": Additional request headers"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Retry Settings"}),": Payment failure retry configuration"]}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Example Workflow:"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"Trigger \u2192 PayStabl API Payment \u2192 Process Response \u2192 Send Notification\n"})}),"\n",(0,s.jsx)(e.h3,{id:"paystabl-agent-payment-node",children:"PayStabl Agent Payment Node"}),"\n",(0,s.jsx)(e.p,{children:"Send payments between agents in your workflow:"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Node Configuration:"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"From Agent"}),": Source agent ID"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"To Agent"}),": Recipient agent ID"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Amount"}),": Payment amount in USD"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Purpose"}),": Payment description"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Conditional"}),": Optional payment conditions"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"paystabl-balance-check-node",children:"PayStabl Balance Check Node"}),"\n",(0,s.jsx)(e.p,{children:"Monitor agent wallet balances and trigger actions:"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Node Configuration:"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Agent ID"}),": Agent to check balance for"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Threshold"}),": Minimum balance threshold"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Alert Settings"}),": Notification preferences"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"example-workflows",children:"Example Workflows"}),"\n",(0,s.jsx)(e.h3,{id:"premium-data-processing-pipeline",children:"Premium Data Processing Pipeline"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "name": "Premium Data Processing",\n  "nodes": [\n    {\n      "name": "Schedule Trigger",\n      "type": "n8n-nodes-base.cron",\n      "parameters": {\n        "triggerTimes": {\n          "mode": "everyMinute"\n        }\n      }\n    },\n    {\n      "name": "Check Balance",\n      "type": "n8n-nodes-paystabl.balance-check",\n      "parameters": {\n        "agentId": "data_processor",\n        "minimumBalance": "10.00"\n      }\n    },\n    {\n      "name": "Get Premium Data",\n      "type": "n8n-nodes-paystabl.api-payment", \n      "parameters": {\n        "agentId": "data_processor",\n        "url": "https://premium-data.com/api/latest",\n        "method": "GET",\n        "retryOnFailure": true,\n        "maxRetries": 3\n      }\n    },\n    {\n      "name": "Process Data",\n      "type": "n8n-nodes-base.function",\n      "parameters": {\n        "functionCode": "// Process the paid data\\nreturn items.map(item => ({\\n  ...item,\\n  processed: true,\\n  timestamp: new Date().toISOString()\\n}));"\n      }\n    },\n    {\n      "name": "Store Results",\n      "type": "n8n-nodes-base.postgres",\n      "parameters": {\n        "operation": "insert",\n        "table": "processed_data"\n      }\n    }\n  ],\n  "connections": {\n    "Schedule Trigger": {\n      "main": [["Check Balance"]]\n    },\n    "Check Balance": {\n      "main": [["Get Premium Data"]]\n    },\n    "Get Premium Data": {\n      "main": [["Process Data"]]\n    },\n    "Process Data": {\n      "main": [["Store Results"]]\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"agent-collaboration-workflow",children:"Agent Collaboration Workflow"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "name": "Multi-Agent Research",\n  "nodes": [\n    {\n      "name": "Webhook Trigger",\n      "type": "n8n-nodes-base.webhook",\n      "parameters": {\n        "path": "research-request"\n      }\n    },\n    {\n      "name": "Pay Research Agent",\n      "type": "n8n-nodes-paystabl.agent-payment",\n      "parameters": {\n        "fromAgentId": "coordinator",\n        "toAgentId": "research_specialist", \n        "amount": "5.00",\n        "purpose": "Research task delegation"\n      }\n    },\n    {\n      "name": "Call Research Agent",\n      "type": "n8n-nodes-base.httpRequest",\n      "parameters": {\n        "url": "https://research-agent.com/api/analyze",\n        "method": "POST",\n        "headers": {\n          "X-PayStabl-Receipt": "={{ $node[\'Pay Research Agent\'].json.receipt }}"\n        }\n      }\n    },\n    {\n      "name": "Pay Analysis Agent", \n      "type": "n8n-nodes-paystabl.agent-payment",\n      "parameters": {\n        "fromAgentId": "coordinator",\n        "toAgentId": "analysis_agent",\n        "amount": "3.00",\n        "purpose": "Data analysis task"\n      }\n    },\n    {\n      "name": "Analyze Results",\n      "type": "n8n-nodes-base.httpRequest",\n      "parameters": {\n        "url": "https://analysis-agent.com/api/process",\n        "method": "POST"\n      }\n    },\n    {\n      "name": "Return Results",\n      "type": "n8n-nodes-base.respond",\n      "parameters": {\n        "respondWith": "json"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"cost-monitoring-workflow",children:"Cost Monitoring Workflow"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "name": "Daily Cost Monitoring",\n  "nodes": [\n    {\n      "name": "Daily Trigger",\n      "type": "n8n-nodes-base.cron",\n      "parameters": {\n        "triggerTimes": {\n          "hour": 9,\n          "minute": 0\n        }\n      }\n    },\n    {\n      "name": "Get Agent Transactions",\n      "type": "n8n-nodes-paystabl.transaction-history",\n      "parameters": {\n        "agentId": "production_agent",\n        "timeframe": "24h",\n        "includeDetails": true\n      }\n    },\n    {\n      "name": "Calculate Daily Spend",\n      "type": "n8n-nodes-base.function",\n      "parameters": {\n        "functionCode": "const transactions = items[0].json.transactions;\\nconst totalSpend = transactions.reduce((sum, tx) => sum + parseFloat(tx.amount), 0);\\n\\nreturn [{\\n  json: {\\n    dailySpend: totalSpend,\\n    transactionCount: transactions.length,\\n    averageTransaction: totalSpend / transactions.length,\\n    highSpendAlert: totalSpend > 50\\n  }\\n}];"\n      }\n    },\n    {\n      "name": "Send Alert If High Spend",\n      "type": "n8n-nodes-base.if",\n      "parameters": {\n        "conditions": {\n          "boolean": [\n            {\n              "value1": "={{ $json.highSpendAlert }}",\n              "value2": true\n            }\n          ]\n        }\n      }\n    },\n    {\n      "name": "Send Slack Alert",\n      "type": "n8n-nodes-base.slack",\n      "parameters": {\n        "channel": "#alerts",\n        "text": "\ud83d\udea8 High agent spending detected: ${{ $node[\'Calculate Daily Spend\'].json.dailySpend }}"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,s.jsx)(e.h3,{id:"conditional-payments",children:"Conditional Payments"}),"\n",(0,s.jsx)(e.p,{children:"Use n8n's IF node with PayStabl for conditional payment logic:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "name": "Quality-Based Payment",\n  "nodes": [\n    {\n      "name": "Receive Task Result",\n      "type": "n8n-nodes-base.webhook"\n    },\n    {\n      "name": "Evaluate Quality",\n      "type": "n8n-nodes-base.function",\n      "parameters": {\n        "functionCode": "const quality = evaluateQuality(items[0].json.result);\\nreturn [{ json: { qualityScore: quality, shouldPayBonus: quality > 0.9 } }];"\n      }\n    },\n    {\n      "name": "Check Quality Threshold", \n      "type": "n8n-nodes-base.if",\n      "parameters": {\n        "conditions": {\n          "boolean": [\n            {\n              "value1": "={{ $json.shouldPayBonus }}",\n              "value2": true\n            }\n          ]\n        }\n      }\n    },\n    {\n      "name": "Pay Bonus",\n      "type": "n8n-nodes-paystabl.agent-payment",\n      "parameters": {\n        "fromAgentId": "quality_assessor",\n        "toAgentId": "{{ $node[\'Receive Task Result\'].json.agentId }}",\n        "amount": "2.00",\n        "purpose": "Quality bonus payment"\n      }\n    },\n    {\n      "name": "Pay Standard Fee",\n      "type": "n8n-nodes-paystabl.agent-payment", \n      "parameters": {\n        "fromAgentId": "quality_assessor",\n        "toAgentId": "{{ $node[\'Receive Task Result\'].json.agentId }}",\n        "amount": "1.00",\n        "purpose": "Standard task payment"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"bulk-payment-processing",children:"Bulk Payment Processing"}),"\n",(0,s.jsx)(e.p,{children:"Handle multiple payments efficiently:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "name": "Bulk Agent Payments",\n  "nodes": [\n    {\n      "name": "Load Payment List",\n      "type": "n8n-nodes-base.spreadsheetFile",\n      "parameters": {\n        "fileFormat": "csv"\n      }\n    },\n    {\n      "name": "Process Each Payment",\n      "type": "n8n-nodes-base.itemLists",\n      "parameters": {\n        "operation": "splitOutItems"\n      }\n    },\n    {\n      "name": "Execute Payment",\n      "type": "n8n-nodes-paystabl.agent-payment",\n      "parameters": {\n        "fromAgentId": "payroll_agent",\n        "toAgentId": "={{ $json.agentId }}",\n        "amount": "={{ $json.amount }}",\n        "purpose": "={{ $json.description }}"\n      }\n    },\n    {\n      "name": "Log Results",\n      "type": "n8n-nodes-base.function",\n      "parameters": {\n        "functionCode": "// Log payment results for audit\\nconst result = items[0].json;\\nconsole.log(`Payment to ${result.toAgentId}: ${result.status}`);\\nreturn items;"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(e.h3,{id:"payment-failure-recovery",children:"Payment Failure Recovery"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "name": "Robust Payment Workflow",\n  "nodes": [\n    {\n      "name": "Attempt Payment",\n      "type": "n8n-nodes-paystabl.api-payment",\n      "parameters": {\n        "agentId": "robust_agent",\n        "url": "https://premium-service.com/api",\n        "retryOnFailure": true,\n        "maxRetries": 3\n      },\n      "onError": "continueRegularOutput"\n    },\n    {\n      "name": "Check Payment Status",\n      "type": "n8n-nodes-base.if",\n      "parameters": {\n        "conditions": {\n          "string": [\n            {\n              "value1": "={{ $json.status }}",\n              "value2": "success"\n            }\n          ]\n        }\n      }\n    },\n    {\n      "name": "Handle Payment Failure",\n      "type": "n8n-nodes-base.function",\n      "parameters": {\n        "functionCode": "const error = items[0].json.error;\\nif (error.code === \'INSUFFICIENT_FUNDS\') {\\n  return [{ json: { action: \'request_funding\', agentId: items[0].json.agentId } }];\\n} else if (error.code === \'API_UNAVAILABLE\') {\\n  return [{ json: { action: \'try_fallback\', fallbackUrl: \'https://backup-api.com\' } }];\\n}\\nreturn [{ json: { action: \'alert_admin\', error: error.message } }];"\n      }\n    },\n    {\n      "name": "Send Admin Alert",\n      "type": "n8n-nodes-base.email",\n      "parameters": {\n        "to": "admin@company.com",\n        "subject": "Payment Failure Alert",\n        "text": "Agent payment failed: {{ $json.error }}"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"balance-monitoring-and-auto-funding",children:"Balance Monitoring and Auto-funding"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "name": "Auto-Fund Agent Wallet", \n  "nodes": [\n    {\n      "name": "Check Balance Hourly",\n      "type": "n8n-nodes-base.cron",\n      "parameters": {\n        "triggerTimes": {\n          "minute": 0\n        }\n      }\n    },\n    {\n      "name": "Get Current Balance",\n      "type": "n8n-nodes-paystabl.balance-check",\n      "parameters": {\n        "agentId": "production_agent"\n      }\n    },\n    {\n      "name": "Check If Low Balance",\n      "type": "n8n-nodes-base.if",\n      "parameters": {\n        "conditions": {\n          "number": [\n            {\n              "value1": "={{ $json.balance }}",\n              "operation": "smaller",\n              "value2": 10\n            }\n          ]\n        }\n      }\n    },\n    {\n      "name": "Transfer Funds",\n      "type": "n8n-nodes-paystabl.agent-payment",\n      "parameters": {\n        "fromAgentId": "treasury_agent",\n        "toAgentId": "production_agent", \n        "amount": "50.00",\n        "purpose": "Auto-funding low balance"\n      }\n    },\n    {\n      "name": "Log Funding Event",\n      "type": "n8n-nodes-base.airtable",\n      "parameters": {\n        "operation": "create",\n        "table": "funding_log"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"workflow-templates",children:"Workflow Templates"}),"\n",(0,s.jsx)(e.h3,{id:"customer-service-bot",children:"Customer Service Bot"}),"\n",(0,s.jsx)(e.p,{children:"Complete workflow for a customer service bot that can pay for premium services:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "name": "AI Customer Service",\n  "description": "Customer service bot with payment capabilities",\n  "nodes": [\n    {\n      "name": "Customer Message",\n      "type": "n8n-nodes-base.webhook",\n      "parameters": {\n        "path": "customer-chat"\n      }\n    },\n    {\n      "name": "Analyze Sentiment",\n      "type": "n8n-nodes-paystabl.api-payment",\n      "parameters": {\n        "agentId": "customer_service_bot",\n        "url": "https://sentiment-analysis.com/api",\n        "method": "POST",\n        "amount": "0.25"\n      }\n    },\n    {\n      "name": "Check If Escalation Needed",\n      "type": "n8n-nodes-base.if",\n      "parameters": {\n        "conditions": {\n          "number": [\n            {\n              "value1": "={{ $json.sentiment.anger }}",\n              "operation": "larger", \n              "value2": 0.8\n            }\n          ]\n        }\n      }\n    },\n    {\n      "name": "Pay Human Agent",\n      "type": "n8n-nodes-paystabl.agent-payment",\n      "parameters": {\n        "fromAgentId": "customer_service_bot",\n        "toAgentId": "human_support_agent",\n        "amount": "15.00",\n        "purpose": "Escalated customer support"\n      }\n    },\n    {\n      "name": "Generate AI Response",\n      "type": "n8n-nodes-paystabl.api-payment",\n      "parameters": {\n        "agentId": "customer_service_bot",\n        "url": "https://ai-response.com/api",\n        "method": "POST",\n        "amount": "0.10"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"research-automation",children:"Research Automation"}),"\n",(0,s.jsx)(e.p,{children:"Automated research workflow with multiple paid services:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "name": "Automated Research Pipeline",\n  "nodes": [\n    {\n      "name": "Research Request",\n      "type": "n8n-nodes-base.webhook"\n    },\n    {\n      "name": "Academic Search",\n      "type": "n8n-nodes-paystabl.api-payment",\n      "parameters": {\n        "agentId": "research_bot",\n        "url": "https://academic-search.com/api",\n        "amount": "5.00"\n      }\n    },\n    {\n      "name": "Industry Analysis",\n      "type": "n8n-nodes-paystabl.agent-payment",\n      "parameters": {\n        "fromAgentId": "research_bot",\n        "toAgentId": "industry_analyst",\n        "amount": "10.00"\n      }\n    },\n    {\n      "name": "Generate Report",\n      "type": "n8n-nodes-paystabl.agent-payment",\n      "parameters": {\n        "fromAgentId": "research_bot", \n        "toAgentId": "report_writer",\n        "amount": "8.00"\n      }\n    },\n    {\n      "name": "Deliver Results",\n      "type": "n8n-nodes-base.email"\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsx)(e.h3,{id:"workflow-design",children:"Workflow Design"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Balance Checks"}),": Always check agent balance before expensive operations"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Error Handling"}),": Implement proper error handling for payment failures"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Logging"}),": Log all payment transactions for audit trails"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Monitoring"}),": Set up alerts for unusual spending patterns"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Fallbacks"}),": Have backup services in case primary payments fail"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"security-considerations",children:"Security Considerations"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "name": "Secure Payment Workflow",\n  "settings": {\n    "executionOrder": "v1",\n    "saveManualExecutions": false,\n    "callerPolicy": "workflowsFromSameOwner"\n  },\n  "nodes": [\n    {\n      "name": "Validate Request",\n      "type": "n8n-nodes-base.function",\n      "parameters": {\n        "functionCode": "// Validate payment request\\nconst request = items[0].json;\\nif (!request.agentId || !request.amount) {\\n  throw new Error(\'Invalid payment request\');\\n}\\nif (parseFloat(request.amount) > 100) {\\n  throw new Error(\'Amount exceeds daily limit\');\\n}\\nreturn items;"\n      }\n    },\n    {\n      "name": "Check Agent Authorization",\n      "type": "n8n-nodes-base.httpRequest",\n      "parameters": {\n        "url": "https://auth-service.com/validate-agent",\n        "authentication": "headerAuth"\n      }\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Use batch operations for multiple payments"}),"\n",(0,s.jsx)(e.li,{children:"Implement caching for frequently accessed data"}),"\n",(0,s.jsx)(e.li,{children:"Set appropriate timeout values for API calls"}),"\n",(0,s.jsx)(e.li,{children:"Use webhook triggers instead of polling where possible"}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(e.h3,{id:"common-issues",children:"Common Issues"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Payment Node Not Found"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Reinstall PayStabl nodes\nnpm uninstall n8n-nodes-paystabl\nnpm install n8n-nodes-paystabl\n# Restart n8n\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Agent Authentication Failures"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Verify PayStabl API key in environment variables"}),"\n",(0,s.jsx)(e.li,{children:"Check agent ID spelling and case sensitivity"}),"\n",(0,s.jsx)(e.li,{children:"Ensure agent is properly registered in PayStabl"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"Payment Timeouts"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Increase timeout settings in node configuration"}),"\n",(0,s.jsx)(e.li,{children:"Check network connectivity to PayStabl services"}),"\n",(0,s.jsx)(e.li,{children:"Verify target API is responding correctly"}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"debug-mode",children:"Debug Mode"}),"\n",(0,s.jsx)(e.p,{children:"Enable debug logging for PayStabl nodes:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Set environment variable\nexport N8N_LOG_LEVEL=debug\nexport PAYSTABL_DEBUG=true\n\n# Start n8n with debug output\nn8n start --tunnel\n"})}),"\n",(0,s.jsx)(e.h2,{id:"related-documentation",children:"Related Documentation"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"/docs/tools/pay_api_endpoint",children:"PayStabl API Reference"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"/docs/tools/pay_agent",children:"Agent Payment Guide"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"/docs/security",children:"Security Guide"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://docs.n8n.io/",children:"n8n Official Documentation"})}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"support",children:"Support"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/paystabl/n8n-nodes",children:"GitHub Repository"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://discord.gg/paystabl",children:"Discord Community"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"mailto:support@paystabl.com",children:"Email Support"})}),"\n"]})]})}function m(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}}}]);